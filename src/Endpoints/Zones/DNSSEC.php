<?php

namespace Cloudflare\Endpoints\Zones;

use Cloudflare\Endpoints\AbstractEndpoint;
use Cloudflare\Contracts\CloudflareResponse;

class DNSSEC extends AbstractEndpoint
{
    /**
     * Details about DNSSEC status and configuration.
     *
     * @link https://developers.cloudflare.com/api/operations/dnssec-dnssec-details
     *
     * @param string $zoneId Zone Identifier.
     *
     * @return CloudflareResponse DNSSEC Details response
     */
    public function details(string $zoneId): CloudflareResponse
    {
        return $this->getHttpClient()->get("/zones/{$zoneId}/dnssec");
    }

    /**
     * Enable or disable DNSSEC.
     *
     * @link https://developers.cloudflare.com/api/operations/dnssec-edit-dnssec-status
     *
     * @param string $zoneId Zone Identifier.
     * @param string $status Status of DNSSEC, based on user-desired state and presence of necessary records. Allowed values: `active`, `disabled`
     * @param bool $multiSigner If true, multi-signer DNSSEC is enabled on the zone, allowing multiple providers to serve a DNSSEC-signed zone at the same time. This is required for DNSKEY records (except those automatically generated by Cloudflare) to be added to the zone. See [Multi-signer DNSSEC](https://developers.cloudflare.com/dns/dnssec/multi-signer-dnssec/) for details.
     * @param bool $presigned If true, allows Cloudflare to transfer in a DNSSEC-signed zone including signatures from an external provider, without requiring Cloudflare to sign any records on the fly. Note that this feature has some limitations. See [Cloudflare as Secondary](https://developers.cloudflare.com/dns/zone-setups/zone-transfers/cloudflare-as-secondary/setup/#dnssec) for details.
     *
     * @return CloudflareResponse Update DNSSEC Status response
     */
    public function update(string $zoneId, string $status, bool $multiSigner = false, bool $presigned = false): CloudflareResponse
    {
        return $this->getHttpClient()->patch("/zones/{$zoneId}/dnssec", [
            'dnssec_multi_signer' => $multiSigner,
            'dnssec_presigned' => $presigned,
            'status' => $status,
        ]);
    }

    /**
     * Delete DNSSEC.
     *
     * @link https://developers.cloudflare.com/api/operations/dnssec-delete-dnssec-records
     *
     * @param string $zoneId Zone Identifier.
     *
     * @return CloudflareResponse Delete DNSSEC records response
     */
    public function delete(string $zoneId): CloudflareResponse
    {
        return $this->getHttpClient()->delete("/zones/{$zoneId}/dnssec");
    }
}
